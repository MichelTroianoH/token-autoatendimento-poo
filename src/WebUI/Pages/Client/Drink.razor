@page "/drink"

@inject ProductCommand ProductCommand
@inject OrderCommand OrderCommand

<div class="row">
    <div class="col-7">
        <h1>Bebidas</h1>
        @if (Products != null)
        {
            @foreach (Product product in Products)
            {
                <div class="media text-muted pt-3">
                    <div class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                        <div class="d-flex justify-content-between align-items-center w-100">
                            <strong class="h4 text-dark cursor-pointer" @onclick="() => AddItem(product)">@(product.Name)</strong>
                            <h5 class="text-green">@(Currency.StringFormat(product.UnitPrice))</h5>
                        </div>
                        <span class="d-block">@(product.Description)</span>
                    </div>
                </div>
            }
        }
    </div>
    <div class="col-5" style="margin-top: -18px;">
        <div class="cartbar">
            <Cart OrderCommand="OrderCommand"/>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public string? Type { get; set; }

    private IEnumerable<Product>? Products { get; set; }
    
    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            Products = await ProductCommand.ListAllAsync(ProductType.Drink);
            StateHasChanged();
        }
    }
    
    void AddItem(Product product)
    {
        OrderCommand.AddItem(product);
    }
}